<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.recruit.mapper.adminMapper">

	<select id="read" resultType="BoardVO">
	select
		id, pname, email, birth
	from
		tbluser
	where id = #{id}
	</select>

	<update id="update">
		update tbluser set
		pw = #{pw}, pname = #{pname}, email = #{email}, birth = #{birth}
		where id = #{id}
	</update>

	<delete id="delete">
		delete from tbluser where id = #{id}
	</delete>

	<select id="listAll" resultType="BoardVO">
	<![CDATA[
	select
		id, pname, email, birth
	from
		tbluser
	where
		cname is null and id != 'admin'
	order by id
	]]>
	</select>
	
	<select id="listCriteria" resultType="BoardVO">
	<![CDATA[
	select
		id, pname, email, birth
	from
		tbluser
	where
		cname is null and id != 'admin'
	order by id
	limit #{pageStart}, #{perPageNum}
	]]>	
	</select>

	<select id="listPage" resultType="BoardVO">
	<![CDATA[
	select
		id, pname, email, birth
	from
		tbluser
	where
		cname is null and id != 'admin'
	order by id
	limit #{page}, 10
	]]>
	</select>
	
	<select id="countPaging" resultType="int">
	<![CDATA[
	select
		count(pname)
	from
		tbluser
	where
		cname is null and id != 'admin'
	]]>
	</select>
	
	<select id="listSearch" resultType="BoardVO">
	<![CDATA[
	select *
	from
		tbluser
	where
		cname is null and id != 'admin'
	]]>
	
	<include refid="search"></include>
	
	<![CDATA[
	order by id
	limit #{pageStart}, #{perPageNum}
	]]>
	</select>
	
	<sql id="search">
	<if test="searchType != null">
		<if test="searchType == 'id'.toString()">
			and id like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'pname'.toString()">
			and pname like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'email'.toString()">
			and email like CONCAT('%', #{keyword}, '%')
		</if>
	</if>
	</sql>
	
	<select id="listSearchCount" resultType="int">
	<![CDATA[
	select count(pname)
	from tbluser
	where cname is null and id != 'admin'
	]]>
	<include refid="search"></include>
	</select>


	<select id="aread" resultType="BoardVO">
	select
		id, pw, pname, email, birth
	from
		tbluser
	where id = 'admin'
	</select>
	
	<update id="aupdate">
		update tbluser set
		pw = #{pw}, pname = #{pname}, email = #{email}, birth = #{birth}
		where id = 'admin'
	</update>
	
	<select id="readpw" resultType="String">
	select
		pw
	from
		tbluser
	where id = #{id}
	</select>
	
	<select id="pcount" resultType="int">
	<![CDATA[
	select
		count(pname)
	from
		tbluser
	where
		cname is null and id != 'admin'
	]]>
	</select>
	
	<select id="ccount" resultType="int">
	<![CDATA[
	select
		count(cname)
	from
		tbluser
	]]>
	</select>
	
	<select id="count_recruit" resultType="StatisticVO">
	select t.selected_date as day, count(date_format(u.createdate, '%Y-%m-%d')) as weekRecruit
	from project.tblrecruit u right outer join(
	select * from 
	(select adddate('1970-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) selected_date from
	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
	(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
	where selected_date between current_date()-interval 6 day and current_date()
	) t
	on date_format(u.createdate, '%Y-%m-%d') = t.selected_date
	group by date_format(u.createdate, '%Y-%m-%d'), t.selected_date
	order by t.selected_date;
	</select>
</mapper>