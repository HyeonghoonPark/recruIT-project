<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.recruit.mapper.CompanyMapper">

	<select id="companyinfoRead" resultType="com.recruit.domain.CInfoVO">
	select
		email1.id, email1.cname, img, homepage, intro, ceo, ctype, form, establish,
		numemp, sales, tel, fax, sns, location, phone, email
	from
		tblcinfo as email1, tbluser as email2
	where
		email1.id = #{id} and email1.id = email2.id  <!--문> email관련 추가 -->
	</select> <!-- 기업정보 출력 -->

	<update id="companyinfoUpdate">
	update 
		project.tblcinfo
	set 
		cname =#{cname}, homepage=#{homepage}, intro=#{intro}, ceo=#{ceo},
		ctype=#{ctype}
		, form=#{form}, establish=#{establish}, numemp=#{numemp},
		sales=#{sales}, tel=#{tel}, fax=#{fax}, sns=#{sns} , img=#{img}
		, location=#{location}, phone=#{phone} , email=#{email}
	where 
		id = #{id}
	</update> 
  
 <!-- 
 <update id="companyinfoUpdate"> 
 update project.tblcinfo 
 set cname =#{cname}, homepage=#{homepage}, intro=#{intro}, ceo=#{ceo}, ctype=#{ctype}
 , form=#{form}, establish=#{establish}, numemp=#{numemp}, sales=#{sales}, tel=#{tel}, fax=#{fax}, sns=#{sns} , img=#{img}
 , location=#{location}, phone=#{phone} , email=#{email}  문> email=#{email}추가 
 where id = #{id}
 </update> 기업정보 수정 
  --> 
   <select id="jobgroupList" resultType="com.recruit.domain.JobGroupVO"> 
 select 
   id, id2, jobgroup
 from 
   tbljobgroup 
 where id2 = 0 
 </select> <!-- 직업 선택 대분류(채용공고 작성) -->
 
  <select id="jobgroupSubList" resultType="JobGroupVO">
		select
		id, jobgroup, id2
		from
		tbljobgroup
		where id2 =
		#{id2}
		
	</select> <!-- 직업 선택 소분류(채용공고 작성) -->
 
 <select id="codeList" resultType="com.recruit.domain.CodeVO"> 
 select 
   id, career, tid
 from 
   tblcode
 </select> <!-- 코드 테이블 대분류(채용공고 작성) -->
  
 <select id="regionList" resultType="com.recruit.domain.RegionVO">
 select 
  DISTINCT rgbid, rgbname
 from 
   tblRegion
 </select>  <!-- 지역 테이블 대분류(채용공고 작성) -->

   <select id="subRegion" resultType="com.recruit.domain.RegionVO">
  
 select 
   rgbid, rgbname, rgsid, rgsname
 from 
   tblregion
   
   where rgbid = #{id2} 

 </select> <!-- 지역 테이블 소분류(채용공고 작성) -->
 
  <insert id="recruitWrite">
  insert into tblrecruit (title, cid, jobgroupid 
  <if test="jobgroupid2 != null">, jobgroupid2</if>
  <if test="jobgroupid2 == null">, jobgroupid2</if>
  , rgbid
  <if test="rgsid != null">,rgsid</if>
  <if test="rgsid == null">,rgsid</if>
  , jobdesc, recruitnum, employstatusid ,salaryid, edu
  , exp, adddesc, period, acceptmethod)
  values (
  #{title}, #{cid}
  , #{jobgroupid}
 <if test="jobgroupid2 != null">, #{jobgroupid2}</if>
 <if test="jobgroupid2 == null">, 0</if>
  , #{rgbid}
  <if test="rgsid != null">, #{rgsid}</if>
   <if test="rgsid == null">, '102'</if>
 , #{jobdesc}
 , #{recruitnum}
 , #{employstatusid}
 , #{salaryid}
 , #{edu}
 , #{exp}
 , #{adddesc}
 , #{period}
 , #{acceptmethod}
 )
 </insert> <!-- 채용공고 작성 -->
 
 <select id="recruitList" resultType="com.recruit.domain.RecruitVO">
 <![CDATA[
 select bno, title, period, viewcnt
  from
   tblRecruit
   where cid = #{id}
 ]]>  
 </select> <!-- 채용공고 리스트 -->
 
 <select id="cRecruitList" resultType="com.recruit.domain.CPersonInfoVO">
 select distinct f.bno, title, (select date_format((select e.period from project.tblrecruit e where e.bno = f.bno),'%m/%d')) as period, r.rgbname as rgbid, c.career as career, m.career as edu, j.jobgroup as jobgroup1 
  from tblRecruit f , tblcode c, tblcode m, tblregion r, tbljobgroup j
   where f.exp = c.id and f.edu = m.id and f.rgbid = r.rgbid and f.jobgroupid = j.id and cid = #{id}
 </select>
 
 <select id="recruitinfoRead" resultType="com.recruit.domain.RecruitVO">
<![CDATA[

	select distinct r.bno, r.cid, r.title, j.jobgroup as jobgroupid, u.jobgroup as jobgroupid2, g.rgbname as rgbid, g.rgsname as rgsid, r.jobdesc, r.recruitnum, c.career as employstatusid, o.career as salaryid,
	 d.career as edu, e.career as exp, r.adddesc, r.period, r.recruitform, r.acceptmethod, r.viewcnt
		
		from project.tblrecruit r, project.tbljobgroup j, project.tbljobgroup u, project.tblregion g
		, project.tblcode c, project.tblcode o, project.tblcode d, project.tblcode e
	where r.bno = #{recruitNum}
    	and r.jobgroupid = j.id
    	and r.jobgroupid2 = u.id
    	and g.rgbid = r.rgbid
    	and g.rgsid = r.rgsid
    	and r.employstatusid = c.id
    	and r.salaryid = o.id
    	and r.edu = d.id
    	and r.exp = e.id or r.exp = null
    	
 ]]>
 </select> <!-- 채용공고 정보 -->
 
  <select id="recruitListt" resultType="com.recruit.domain.RecruitVO">
 <![CDATA[
 select f.bno, title, (select date_format((select e.period from project.tblrecruit e where e.bno = f.bno),'%Y%m%d')) as period, viewcnt
  from
   tblRecruit f
   where cid = #{id}
 ]]>  
 </select>
 
	<update id="updateViewCnt">
		update project.tblrecruit set viewcnt = viewcnt +1 where
		bno = #{recruitNum}
	</update> <!-- 채용공고 카운터 -->
  

<select id="recruitinfoRead3" resultType="com.recruit.domain.RecruitVO">
<![CDATA[
	select bno, title, cid, jobgroupid, jobgroupid2, rgbid, rgsid, jobdesc, recruitnum, employstatusid, salaryid, edu, exp, adddesc, period, acceptmethod
	from project.tblrecruit
	where bno=#{recruitNum}
]]>
</select>

<select id="personRecomList" resultType="com.recruit.domain.CPersonInfoVO"> <!-- 추천인재 리스트 -->
select distinct p.bno as bno, substring(u.pname,1,1) as name, p.title as title,  r.rgbname as rgbid, n.career as salary , e.schoolname, e.major
	from tblresume p, tblRecruit c, tblJobGroup j, tblRegion r, tblcode m, tblcode n, tblUser u, tblresumeedu e
where p.jobgroupid = c.jobgroupid and p.rgbid = c.rgbid and p.rgsid = c.rgsid and p.employstatusid = c.employstatusid and p.jobstateid = 1 and p.salaryid = c.salaryid
and j.id = c.jobgroupid and  r.rgbid = c.rgbid and c.employstatusid = m.id and c.salaryid = n.id and p.userid = u.id and e.resumenum = p.bno
and c.bno = #{bno};
</select> <!-- 추천인재 리스트(조건이 완전 일치하는 인재만 뜨게끔 돼있음)  -->
	
<insert id="favorPersonAdd" parameterType="hashMap">
insert into tblInterestPerson(cuserid, presume) values(#{id}, #{bno});
</insert> <!-- 관심인재 등록 -->

<insert id="favorPersonDelete" parameterType="hashMap">
delete from tblInterestPerson where cuserid = #{id} and presume = #{bno};
</insert> <!-- 관심인재 삭제 -->

	
<select id="favorList" resultType="com.recruit.domain.CPersonInfoVO">
	SELECT  distinct p.bno, substring(u.pname,1,1) as name, p.title, r.rgbname as rgbid, n.career as salary, e.schoolname, e.major
FROM tblInterestPerson f, tblresume p, tblRegion r, tblUser u , tblcode n, tblresumeedu e
	where f.presume = p.bno and p.rgbid = r.rgbid and u.id = p.userid and n.id = p.salaryid and e.resumenum = p.bno and  f.cuserid = #{id};
</select> <!-- 관심인재 리스트 -->

<select id="favorCompareList" resultType="com.recruit.domain.CInterestPersonVO"> 
select presume from tblInterestPerson where cuserid = #{id};

</select> <!-- 추천인재 별표시 비교용 -->

	


<select id="cinfoRecruitList" resultType="com.recruit.domain.RecruitVO">

select distinct r.bno, r.cid, r.title, j.jobgroup as jobgroupid, u.jobgroup as jobgroupid2, g.rgbname as rgbid, g.rgsname as rgsid, r.jobdesc, r.recruitnum, c.career as employstatusid, o.career as salaryid, d.career as edu, e.career as exp, r.adddesc, r.period, r.acceptmethod
		from project.tblrecruit r, project.tbljobgroup j, project.tbljobgroup u, project.tblregion g, project.tblcode c, project.tblcode o, project.tblcode d, project.tblcode e
	where 
 r.jobgroupid = j.id
    	and r.jobgroupid2 = u.id
    	and g.rgbid = r.rgbid
    	and g.rgsid = r.rgsid
    	and r.employstatusid = c.id
    	and r.salaryid = o.id
    	and r.edu = d.id
    	and r.exp = e.id
    	and r.cid = #{id};
</select>

<update id="recruitModify">

update tblrecruit set 
title= #{title},
cid=#{cid}, 
jobgroupid=#{jobgroupid},
jobgroupid2=#{jobgroupid2},
rgbid=#{rgbid}, 
rgsid=#{rgsid}, 
jobdesc=#{jobdesc}, 
recruitnum = #{recruitnum}, 
employstatusid = #{employstatusid},
 salaryid = #{salaryid}, 
edu = #{edu}, 
exp = #{exp}, 
adddesc = #{adddesc}, 
period = #{period},
acceptmethod = #{acceptmethod}, 
recruitform = #{recruitform}

where bno=#{bno} and cid=#{cid};
</update> <!-- 채용공고 수정 -->

<select id="recruitModifyRead"  resultType="com.recruit.domain.RecruitVO" parameterType="hashMap">
select bno,title,cid,jobgroupid,jobgroupid2,rgbid,rgsid,jobdesc,recruitnum, employstatusid, salaryid, edu, exp, adddesc, period, acceptmethod, recruitform, regdate, viewcnt
from tblrecruit 
where bno = #{bno} and cid = #{id};
</select>

<delete id="recruitDelete" parameterType="hashMap">
delete from tblrecruit where bno = #{bno} and cid = #{id};
</delete> <!-- 채용공고 삭제 -->

<select id="applyList" resultType="com.recruit.domain.ResumeVO">
SELECT  p.bno, substring(u.pname,1,1) as img, p.userid address, p.title, e.schoolname coverletter, e.major rgbid
FROM tblApply a, tblRecruit r, tblresume p, tbluser u, tblResumeEdu e,  tblCode m
where a.rcno = #{recruitNum} and r.bno = #{recruitNum} and p.bno = a.rsno and u.id = p.userid and e.resumenum = p.bno and p.salaryid = m.id;
</select> <!-- 지원인재 리스트 -->
</mapper>  



















